{"version":3,"sources":["firebase/firebase.js","screens/LoadingScreen.js","screens/Home.js","screens/OneTimeDashboard.js","components/AddQuestionModal.js","components/QuestionsTable.js","screens/CreateQuiz.js","screens/JoinQuiz.js","components/CreatedQuizCard.js","components/JoinedQuizCard.js","screens/UserDashboard.js","screens/CreatedSuccesfully.js","screens/NotFoundPage.js","screens/AttemptedModal.js","screens/AttemptQuiz.js","components/Sidebar.js","components/Appbar.js","components/ResponsesTable.js","screens/Responses.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","analytics","auth","LoadingScreen","className","color","width","height","type","Home","setUser","useState","loading","setLoading","role","setRole","uiConfig","signInflow","signInOptions","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","callbacks","signInSuccessWithAuthResult","cookies","Cookies","useEffect","a","get","fetchData","onAuthStateChanged","user","console","log","uid","currentUser","name","displayName","email","Container","fluid","Row","Col","lg","id","onChange","set","value","borderRadius","firebaseAuth","OneTimeDashboard","path","setPath","length","push","to","onClick","viewBox","xmlns","fill","d","transform","useStyles","makeStyles","theme","root","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","outline","buttons","AddQuestionModal","title","opType","opArray","index","addQuestionHandle","classes","React","open","setOpen","optionType","setOptionType","optionsArray","setOptionsArray","editedOption","setEditedOption","editOpIndex","setEditOpIndex","titleField","setTitleField","optionsRef","useRef","checkBoxRef","handleOpen","IconButton","EditRounded","Modal","aria-labelledby","aria-describedby","disableEnforceFocus","autoFocus","e","target","placeholder","map","option","ind","disabled","checked","isCorrect","text","Icon","temp","saveEdited","SaveRounded","handleEdit","splice","deleteHandler","DeleteRounded","ref","current","arr","findIndex","op","forEach","alert","variant","tempArr","filter","descendingComparator","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","sort","headCells","numeric","disablePadding","label","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","inputProps","headCell","align","sortDirection","TableSortLabel","active","direction","property","event","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","secondary","main","lighten","light","primary","dark","flex","EnhancedTableToolbar","selected","setSelected","questionArray","setQuestionArray","Toolbar","clsx","Typography","component","element","aria-label","Delete","margin","marginBottom","table","minWidth","border","clip","overflow","position","top","QuestionsTable","rows","question","options","choice","setOrder","setOrderBy","page","setPage","editQuestionHandle","emptyRows","Math","min","Paper","TableContainer","Table","size","newSelecteds","n","TableBody","slice","row","isItemSelected","indexOf","labelId","hover","aria-checked","tabIndex","selectedIndex","newSelected","concat","handleClick","scope","style","colSpan","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","newPage","CreateQuiz","quizTitle","questions","isOpen","editQuizHandle","setTitle","access","setAccesss","quizCode","setQuizCode","createQuiz","fetch","method","body","JSON","stringify","headers","result","json","quizId","autocomplete","Switch","JoinQuiz","valid","setValid","code","setCode","handleJoinQuiz","onKeyPress","key","CreatedQuizCard","responses","setEditQuiz","setDeleteQuiz","undefined","fontWeight","DeleteOutline","JoinedQuizCard","score","UserDashboard","createdQuizzes","setCreatedQuizzes","allQuizzes","setAllQuizzes","attemptedQuizzes","setAttemptedQuizzes","editQuiz","DeleteQuiz","fetchAllQuizzes","quizData","fetchQuizData","results","createdQuiz","attemptedQuiz","dir","_id","submitData","deleteQuizHandle","quiz","totalQuestions","CreatedSuccesfully","match","Copy","setCopy","params","onCopy","NotFoundPage","textAlign","AttemptedModal","totalScore","showModal","error","AttemptQuiz","passed","setPassed","marks","setMarks","setQuestions","attemptedQuestions","setAttemptedQuestions","setQuizTitle","setResult","setShowModal","res","selectedOptions","optionsLength","fetchQuiz","handleOptionSelect","includes","i","submitQues","att","j","document","getElementById","pass","submitQuiz","Sidebar","signOut","setSignOut","SidedbarData","icon","Dashboard","CName","MeetingRoom","CreateNewFolder","sidebar","setSidebar","showSidebar","MenuRounded","MenuOpenRounded","fontSize","item","ExitToApp","Appbar","Navbar","fixed","AccountCircle","StyledTableCell","withStyles","head","common","white","StyledTableRow","action","ResponsesTable","resp","Responses","setResponses","finalResponse","getResponses","App","metadata","lastSignInTime","creationTime","createUserInDB","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a0d542e5.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst firebaseConfig = {\n    apiKey: 'AIzaSyBfSnnZ2HglgbbhtQpPHyHGP-7viAPL1tE',\n    authDomain: 'quizzy-learning.firebaseapp.com',\n    projectId: 'quizzy-learning',\n    storageBucket: 'quizzy-learning.appspot.com',\n    messagingSenderId: '10688054756',\n    appId: '1:10688054756:web:88f1539f6caf21a039f3f1',\n};\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\nfirebase.auth();\n\nexport default firebase;","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport './LoadingScreen.css';\n\nconst LoadingScreen = () => {\n    return (\n        <div className=\"loading\">\n            <h1 className=\"blue\">\n                <b>Quizzy</b>Learning\n            </h1>\n            {/* <Loader color=\"#29455a\" width={130} height={130}  type=\"audio\" />\n      <Loader color=\"#29455a\" width={130} height={130} type=\"BallTriangle\" />\n      <Loader color=\"#29455a\" width={130} height={130}  type=\"Puff\" />\n      <Loader color=\"#29455a\" width={130} height={130} type=\"Bars\" /> */}\n            <Loader color=\"#29455a\" width={130} height={130} type=\"Circles\" />\n        </div>\n    );\n};\nexport default LoadingScreen;\n","import React, { useState, useEffect } from 'react';\nimport './Home.css';\nimport { StyledFirebaseAuth } from 'react-firebaseui';\nimport firebase from '../firebase/firebase';\nimport LoadingScreen from './LoadingScreen';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport Cookies from 'universal-cookie';\n\nconst Home = ({ setUser }) => {\n    const [loading, setLoading] = useState(true);\n    const [role, setRole] = useState('student');\n    var uiConfig = {\n        signInflow: 'popup',\n        signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.EmailAuthProvider.PROVIDER_ID],\n        callbacks: {\n            signInSuccessWithAuthResult: () => false,\n        },\n    };\n    const cookies = new Cookies();\n    const roleStuChange = () => {\n        setRole('student');\n        console.log(role);\n        cookies.set('role', 'student');\n    };\n    const roleTecChange = () => {\n        setRole('teacher');\n        cookies.set('role', 'teacher');\n        console.log(role);\n    };\n    useEffect(() => {\n        async function fetchData() {\n            if (await cookies.get('role')) {\n                setRole(cookies.get('role'));\n            }\n        }\n        fetchData();\n    }, [setUser, setRole]);\n\n    useEffect(() => {\n        // const radioButtons = document.querySelectorAll('input[name=\"role\"]');\n        // const teacher = document.getElementById('#stuid').checked;\n        // console.log(teacher);\n        // console.log(radioButtons);\n\n        firebase.auth().onAuthStateChanged((user) => {\n            console.log(user);\n            let isMounted = true;\n            if (user && isMounted) {\n                setUser({\n                    uid: firebase.auth().currentUser.uid,\n                    name: firebase.auth().currentUser.displayName,\n                    email: firebase.auth().currentUser.email,\n                    role: role,\n                });\n                console.log('User Logged In');\n            } else {\n                console.log('User Signed Out');\n                setUser({});\n            }\n            console.log('auth change');\n\n            if (isMounted) {\n                setLoading(false);\n            }\n        });\n        // if (isMounted) {\n        //     setRole(cookies.get('role'));\n        // }\n    }, [setUser, role]);\n    return (\n        <Container fluid>\n            {loading ? (\n                <LoadingScreen />\n            ) : (\n                <Container className=\"Home\">\n                    <Row className=\"row\">\n                        <Col className=\"logo\" lg={6}>\n                            <Col className=\"logo-name\">\n                                <b>Quizzy</b>Learning\n                            </Col>\n                            <Col>\n                                <Row>\n                                    <div id=\"studentid\">\n                                        <input type=\"radio\" name=\"role\" onChange={() => roleStuChange()} value=\"student\" />\n                                        <label>Student</label>\n                                    </div>\n                                </Row>\n\n                                <Row>\n                                    <div id=\"teacherid\">\n                                        <input type=\"radio\" onChange={() => roleTecChange()} name=\"role\" value=\"teacher\" />\n                                        <label>Teacher</label>\n                                    </div>\n                                </Row>\n                            </Col>\n                        </Col>\n\n                        <Col className=\"login-card\" lg={6}>\n                            <label className=\"login-label\">\n                                <b>Q</b>\n                            </label>\n                            <StyledFirebaseAuth borderRadius=\"40px\" uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n                        </Col>\n                    </Row>\n                </Container>\n            )}\n        </Container>\n    );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport './OneTimeDashboard.css';\n\nconst OneTimeDashboard = ({ user }) => {\n    const [path, setPath] = useState('');\n    // Path Redirection\n    const onDashboard = () => setPath('/dashboard');\n    const onCreateQuiz = () => setPath('/create-quiz');\n    const onJoinQuiz = () => setPath('/join-quiz');\n\n    if (path.length > 0) return <Redirect push to={path} />;\n    console.log(user);\n    return (\n        <Container className=\"one-time-dashboard\">\n            <div className=\"dashboard-content\">\n                <div className=\"dash-btns\">\n                    <h1 className=\"white\">\n                        <b>Quizzy</b> Learning\n                    </h1>\n                    <button className=\"button one-time-button\" onClick={onDashboard}>\n                        <strong>Profile</strong>\n                    </button>\n                    {user.role === 'teacher' ? (\n                        <button className=\"button one-time-button\" onClick={onCreateQuiz}>\n                            <strong>Create Course Quiz</strong>\n                        </button>\n                    ) : (\n                        <div></div>\n                    )}\n\n                    <button className=\"button one-time-button\" onClick={onJoinQuiz}>\n                        <strong>Join Quiz</strong>\n                    </button>\n                </div>\n                <div className=\"blob-svg\">\n                    <svg className=\"blob-1\" viewBox=\"0 0 200 200\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                            fill=\"#D81E5B\"\n                            d=\"M55.6,-59.6C71.1,-53.2,82.1,-34.8,85.2,-15.3C88.2,4.2,83.3,24.7,73,41.7C62.7,58.6,46.8,72,29.8,75.4C12.7,78.9,-5.7,72.5,-21.3,64.3C-36.8,56.1,-49.6,46,-55.3,33.3C-61,20.6,-59.6,5.2,-56.6,-9.6C-53.6,-24.4,-48.8,-38.4,-39.1,-45.8C-29.4,-53.2,-14.7,-53.8,2.7,-57C20,-60.2,40.1,-65.9,55.6,-59.6Z\"\n                            transform=\"translate(100 100)\"\n                        />\n                    </svg>\n\n                    <svg className=\"blob-3\" viewBox=\"0 0 200 200\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                            fill=\"#F7C550\"\n                            d=\"M37.2,-46.1C50.9,-32.8,66.5,-23.6,68.1,-12.3C69.8,-0.9,57.5,12.6,48.4,27.5C39.3,42.4,33.3,58.7,22.7,62.7C12.1,66.7,-3,58.3,-21.7,54C-40.3,49.6,-62.5,49.2,-72.9,38.5C-83.4,27.8,-82.2,6.8,-75.6,-10.4C-69.1,-27.5,-57.2,-40.7,-43.7,-54C-30.2,-67.3,-15.1,-80.6,-1.7,-78.6C11.8,-76.6,23.5,-59.3,37.2,-46.1Z\"\n                            transform=\"translate(100 100)\"\n                        />\n                    </svg>\n                </div>\n            </div>\n        </Container>\n    );\n};\n\nexport default OneTimeDashboard;\n","import React, { useState, useRef, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Modal, Icon, IconButton } from '@material-ui/core'\nimport './AddQuestionModal.css'\nimport { DeleteRounded, EditRounded, SaveRounded } from '@material-ui/icons'\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\t// margin: \"10px\",\n\t},\n\tmodal: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\tpaper: {\n\t\tbackgroundColor: theme.palette.background.paper,\n\t\tboxShadow: theme.shadows[5],\n\t\tpadding: theme.spacing(2, 4, 3),\n\t\toutline: 0,\n\t\twidth: '90%',\n\t\tborderRadius: '10px',\n\t},\n\tbuttons: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'flex-end',\n\t},\n}))\n\nexport default function AddQuestionModal({\n\ttype = 'add',\n\ttitle = '',\n\topType = 'radio',\n\topArray,\n\tindex = -1,\n\taddQuestionHandle,\n}) {\n\tconst classes = useStyles()\n\tconst [open, setOpen] = React.useState(false)\n\tconst [optionType, setOptionType] = useState('radio')\n\tconst [optionsArray, setOptionsArray] = useState([])\n\tconst [editedOption, setEditedOption] = useState(null)\n\tconst [editOpIndex, setEditOpIndex] = useState(-1)\n\tconst [titleField, setTitleField] = useState('')\n\tconst optionsRef = useRef(null)\n\tconst checkBoxRef = useRef(null)\n\n\tuseEffect(() => {\n\t\tif (open) {\n\t\t\tsetTitleField(title)\n\t\t\tsetOptionType(opType)\n\t\t\tif (opArray) setOptionsArray(opArray)\n\t\t} else {\n\t\t\tsetTitleField('')\n\t\t\tsetOptionsArray([])\n\t\t\tsetOptionType('radio')\n\t\t}\n\t}, [open, title, opType, opArray])\n\tconst handleOpen = () => {\n\t\tsetOpen(true)\n\t}\n\n\tconst handleClose = () => {\n\t\tsetOpen(false)\n\t}\n\tconst addQuestionCallBack = () => {\n\t\tconst tempArr = [...optionsArray]\n\t\tif (optionsRef.current.value.length !== 0) {\n\t\t\t// For radio options, set all other options incorrect\n\t\t\tif (optionType === 'radio' && checkBoxRef.current.checked)\n\t\t\t\ttempArr.forEach((op) => (op.isCorrect = false))\n\n\t\t\ttempArr.push({\n\t\t\t\ttext: optionsRef.current.value,\n\t\t\t\tisCorrect: checkBoxRef.current.checked,\n\t\t\t})\n\t\t}\n\t\t// Error Handling\n\t\tif (!titleField.length && optionsArray.length < 2) {\n\t\t\talert('Please add Question and atleast 2 options.')\n\t\t\treturn\n\t\t} else if (!titleField.length) {\n\t\t\talert('Please add Question.')\n\t\t\treturn\n\t\t} else if (optionsArray.length < 2) {\n\t\t\talert('Number of Options must be greater than 1.')\n\t\t\treturn\n\t\t}\n\t\tconst correctOp = optionsArray.filter((op) => op.isCorrect)\n\t\tif (correctOp.length < 1) {\n\t\t\talert('No correct option was selected.')\n\t\t\treturn\n\t\t}\n\t\tif (index !== -1) addQuestionHandle(titleField, optionType, tempArr, index)\n\t\telse addQuestionHandle(titleField, optionType, tempArr)\n\n\t\tsetOpen(false)\n\t}\n\n\tconst addOption = () => {\n\t\tif (optionsRef.current.value.length === 0) return\n\n\t\tconst arr = [...optionsArray]\n\t\tif (\n\t\t\toptionsArray.findIndex((op) => op.text === optionsRef.current.value) !==\n\t\t\t-1\n\t\t) {\n\t\t\talert('Option already exists.')\n\t\t\treturn\n\t\t}\n\t\tif (optionType === 'radio' && checkBoxRef.current.checked)\n\t\t\t// For radio options, set all other options incorrect\n\t\t\tarr.forEach((op) => (op.isCorrect = false))\n\n\t\tarr.push({\n\t\t\ttext: optionsRef.current.value,\n\t\t\tisCorrect: checkBoxRef.current.checked,\n\t\t})\n\t\toptionsRef.current.value = ''\n\t\tcheckBoxRef.current.checked = false\n\t\tsetOptionsArray(arr)\n\t}\n\tconst handleTypeChange = (e) => setOptionType(e.target.value)\n\n\tconst deleteHandler = (ind) => {\n\t\tconst temp = [...optionsArray]\n\t\ttemp.splice(ind, 1)\n\t\tsetOptionsArray(temp)\n\t\tsetEditOpIndex(-1)\n\t}\n\n\tconst handleEdit = (ind) => {\n\t\tif (editOpIndex === -1) {\n\t\t\tsetEditOpIndex(ind)\n\t\t\tsetEditedOption(optionsArray[ind].text)\n\t\t}\n\t}\n\n\tconst saveEdited = () => {\n\t\tconst temp = [...optionsArray]\n\t\ttemp[editOpIndex].text = editedOption\n\t\tsetOptionsArray(temp)\n\t\tsetEditOpIndex(-1)\n\t}\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t{type === 'add' ? (\n\t\t\t\t<button className='button' onClick={handleOpen}>\n\t\t\t\t\tAdd Question\n\t\t\t\t</button>\n\t\t\t) : (\n\t\t\t\t<IconButton onClick={handleOpen}>\n\t\t\t\t\t<EditRounded />\n\t\t\t\t</IconButton>\n\t\t\t)}\n\t\t\t<Modal\n\t\t\t\taria-labelledby='transition-modal-title'\n\t\t\t\taria-describedby='transition-modal-description'\n\t\t\t\tclassName={classes.modal}\n\t\t\t\topen={open}\n\t\t\t\tdisableEnforceFocus={true}\n\t\t\t>\n\t\t\t\t<div className={classes.paper}>\n\t\t\t\t\t<div className='questionCard'>\n\t\t\t\t\t\t<div id='title'>Question:</div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tvalue={titleField}\n\t\t\t\t\t\t\tonChange={(e) => setTitleField(e.target.value)}\n\t\t\t\t\t\t\tclassName='input-text question'\n\t\t\t\t\t\t\tplaceholder='Type Question Here'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tid='select'\n\t\t\t\t\t\t\tplaceholder='Select'\n\t\t\t\t\t\t\tonChange={handleTypeChange}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<option className='selectOp' value='radio'>\n\t\t\t\t\t\t\t\tSingle Answer\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t<option className='selectOp' value='check'>\n\t\t\t\t\t\t\t\tMultiple Answers\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t</select>\n\n\t\t\t\t\t\t<div className='option-div'>\n\t\t\t\t\t\t\t<div className='options' id='one-op'>\n\t\t\t\t\t\t\t\t{optionsArray.map((option, ind) => (\n\t\t\t\t\t\t\t\t\t<div className='option' key={ind}>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype={optionType === 'radio' ? 'radio' : 'checkbox'}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\t\t\tclassName='radio-in'\n\t\t\t\t\t\t\t\t\t\t\tname='option'\n\t\t\t\t\t\t\t\t\t\t\tchecked={option.isCorrect}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t{editOpIndex === ind ? (\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={editedOption}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setEditedOption(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<div className='add-op'>{option.text}</div>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t{editOpIndex === ind ? (\n\t\t\t\t\t\t\t\t\t\t\t<Icon className='save-icon' onClick={() => saveEdited()}>\n\t\t\t\t\t\t\t\t\t\t\t\t<SaveRounded />\n\t\t\t\t\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='edit-icon'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleEdit(ind)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<EditRounded />\n\t\t\t\t\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\tclassName='delete-icon'\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tdeleteHandler(ind)\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<DeleteRounded />\n\t\t\t\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='add-op'>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype={optionType === 'radio' ? 'radio' : 'checkbox'}\n\t\t\t\t\t\t\t\t\tref={checkBoxRef}\n\t\t\t\t\t\t\t\t\tclassName='radio-in'\n\t\t\t\t\t\t\t\t\tname='option'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tref={optionsRef}\n\t\t\t\t\t\t\t\t\tclassName='input-text op-text'\n\t\t\t\t\t\t\t\t\tplaceholder={`Option ${optionsArray.length + 1}`}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\tclassName='add-btn'\n\t\t\t\t\t\t\t\tvalue='+ Add'\n\t\t\t\t\t\t\t\tonClick={addOption}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.buttons}>\n\t\t\t\t\t\t<button className='add-btn' onClick={handleClose}>\n\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t// disabled={!(optionsArray.length && titleField.length)}\n\t\t\t\t\t\t\tclassName='button'\n\t\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\tonClick={addQuestionCallBack}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{type === 'add' ? 'Add ' : 'Edit '}\n\t\t\t\t\t\t\tQuestion\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t</div>\n\t)\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Delete } from '@material-ui/icons';\nimport AddQuestionModal from './AddQuestionModal';\n\nfunction createData(title, options, choice) {\n    return { title, options, choice };\n}\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n    {\n        id: 'title',\n        numeric: false,\n        disablePadding: true,\n        label: 'Question',\n    },\n    { id: 'options', numeric: true, disablePadding: false, label: 'Options' },\n    { id: 'choice', numeric: true, disablePadding: false, label: 'Choice' },\n    { id: 'edit', numeric: true, disablePadding: false, label: 'Edit' },\n];\n\nfunction EnhancedTableHead(props) {\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                </TableCell>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel active={orderBy === headCell.id} direction={orderBy === headCell.id ? order : 'asc'} onClick={createSortHandler(headCell.id)}>\n                            {headCell.label}\n                            {orderBy === headCell.id ? <span className={classes.visuallyHidden}>{order === 'desc' ? 'sorted descending' : 'sorted ascending'}</span> : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    title: {\n        flex: '1 1 100%',\n    },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const { numSelected, selected, setSelected, questionArray, setQuestionArray } = props;\n\n    const deleteRow = () => {\n        const temp = [...questionArray];\n        // Delete the selected rows from QuestionsArray\n        selected.forEach((element) => {\n            const target = temp.findIndex((e) => e.title === element);\n            temp.splice(target, 1);\n        });\n\n        setQuestionArray(temp);\n        setSelected([]);\n    };\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            {numSelected > 0 ? (\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n                    {numSelected} selected\n                </Typography>\n            ) : (\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                    QUESTIONS\n                </Typography>\n            )}\n\n            {numSelected > 0 ? (\n                <IconButton onClick={deleteRow} aria-label=\"delete\">\n                    <Delete />\n                </IconButton>\n            ) : null}\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n    selected: PropTypes.array,\n    setSelected: PropTypes.func,\n    questionArray: PropTypes.array,\n    setQuestionArray: PropTypes.func,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '95%',\n        margin: '5px',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function QuestionsTable({ questionArray, setQuestionArray }) {\n    const rows = questionArray.map((question) => createData(question.title, question.options, question.optionType));\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n\n    const editQuestionHandle = (title, optionType, options, index) => {\n        const temp = [...questionArray];\n        temp[index] = { title, optionType, options };\n        setQuestionArray(temp);\n    };\n\n    const rowsPerPage = 5;\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((n) => n.title);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    // const handleChangeRowsPerPage = (event) => {\n    // \tsetRowsPerPage(parseInt(event.target.value, 10));\n    // \tsetPage(0);\n    // };\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <EnhancedTableToolbar numSelected={selected.length} selected={selected} setSelected={setSelected} questionArray={questionArray} setQuestionArray={setQuestionArray} />\n                <TableContainer>\n                    <Table className={classes.table} aria-labelledby=\"tableTitle\" size=\"small\" aria-label=\"enhanced table\">\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {stableSort(rows, getComparator(order, orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row, index) => {\n                                    const isItemSelected = isSelected(row.title);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <TableRow hover role=\"checkbox\" aria-checked={isItemSelected} tabIndex={-1} key={row.title} selected={isItemSelected}>\n                                            <TableCell padding=\"checkbox\">\n                                                <Checkbox onClick={(event) => handleClick(event, row.title)} checked={isItemSelected} inputProps={{ 'aria-labelledby': labelId }} />\n                                            </TableCell>\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                                                {row.title}\n                                            </TableCell>\n                                            <TableCell align=\"right\">{row.options.length}</TableCell>\n                                            <TableCell align=\"right\">{row.choice === 'radio' ? 'Single' : 'Multiple'}</TableCell>\n                                            <TableCell align=\"right\">\n                                                <AddQuestionModal\n                                                    key={index}\n                                                    type=\"edit\"\n                                                    title={row.title}\n                                                    opType={row.choice}\n                                                    opArray={row.options}\n                                                    index={index}\n                                                    addQuestionHandle={editQuestionHandle}\n                                                />\n                                            </TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: 33 * emptyRows }}>\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    // onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './CreateQuiz.css';\nimport AddQuestionModal from '../components/AddQuestionModal';\nimport QuestionsTable from '../components/QuestionsTable';\nimport { Switch } from '@material-ui/core';\nimport LoadingScreen from './LoadingScreen';\n\nconst CreateQuiz = ({\n    user,\n    quizTitle,\n    questions,\n\n    isOpen,\n    editQuizHandle,\n}) => {\n    const [questionArray, setQuestionArray] = useState([]);\n    const [title, setTitle] = useState('');\n    const [access, setAccesss] = useState(true);\n    const [loading, setLoading] = useState('stop');\n    const [quizCode, setQuizCode] = useState(null);\n\n    const addQuestionHandle = (title, optionType, options) => {\n        const arr = [...questionArray];\n        arr.push({ title, optionType, options });\n        setQuestionArray(arr);\n    };\n    useEffect(() => {\n        if (quizTitle) {\n            setTitle(quizTitle);\n            setQuestionArray(questions);\n            setAccesss(isOpen);\n        }\n    }, [quizTitle, questions, isOpen]);\n\n    const createQuiz = async () => {\n        if (!(title.length || questionArray.length)) {\n            alert('Please add title and questions.');\n            return;\n        } else if (!title.length) {\n            alert('Please add Quiz title.');\n            return;\n        } else if (!questionArray.length) {\n            alert('Please add any questions.');\n            return;\n        }\n        console.log('Quiz Creation Starts...');\n        setLoading('start');\n        try {\n            const result = await fetch('/API/quizzes/create', {\n                method: 'POST',\n                body: JSON.stringify({\n                    title,\n                    uid: user.uid,\n                    questions: questionArray,\n                    isOpen: access,\n                }),\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n            console.log('Quiz posted ! ');\n            const body = await result.json();\n            console.log('Quiz Code : ', body.quizId);\n            setQuizCode(body.quizId);\n        } catch (e) {\n            console.log('Quiz creation error : ', e);\n            setLoading('error');\n        }\n    };\n    if (quizCode) return <Redirect push to={`/created-succesfully/${quizCode}`} />;\n\n    if (loading === 'start') return <LoadingScreen />;\n\n    return (\n        <div id=\"main-body\">\n            <div id=\"create-quiz-body\">\n                <div className=\"quiz-header\">\n                    <input type=\"text\" className=\"input-text\" value={title} onChange={(e) => setTitle(e.target.value)} id=\"quiz-title\" placeholder=\"Course Quiz Name\" autoFocus autocomplete=\"off\" />\n                </div>\n                <div className=\"controls\">\n                    <AddQuestionModal addQuestionHandle={addQuestionHandle} />\n                    <div className=\"switch\">\n                        <Switch checked={access} onChange={(e) => setAccesss(e.target.checked)} color=\"secondary\" name=\"access\" />\n                        <h4>{access ? 'Open' : 'Close'}</h4>\n                    </div>\n                </div>\n            </div>\n            <div className=\"questionTable\">\n                <QuestionsTable questionArray={questionArray} setQuestionArray={setQuestionArray} />\n            </div>\n            <div>\n                {quizTitle && (\n                    <button className=\"add-btn\" onClick={() => editQuizHandle()}>\n                        Close\n                    </button>\n                )}\n                <button\n                    // disabled={!(title.length && questionArray.length)}\n                    className=\"button wd-200\"\n                    onClick={() => {\n                        if (quizTitle) editQuizHandle(title, questionArray, access);\n                        else createQuiz();\n                    }}\n                >\n                    {quizTitle ? 'Save ' : 'Create '}\n                    Quiz\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default CreateQuiz;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './JoinQuiz.css';\n\nconst JoinQuiz = () => {\n    const [valid, setValid] = useState('false');\n    const [code, setCode] = useState('');\n\n    const handleJoinQuiz = () => {\n        if (code.length) setValid('attempt-quiz');\n    };\n\n    if (valid !== 'false') return <Redirect push to={`/${valid}/${code}`} />;\n\n    return (\n        <div id=\"join-quiz\">\n            <div id=\"join-quiz-div\">\n                <div className=\"logo-name\">\n                    <b>Quizzy</b>Learning\n                </div>\n                <input\n                    value={code}\n                    onChange={(e) => setCode(e.target.value)}\n                    id=\"q-code\"\n                    type=\"text\"\n                    placeholder=\"Enter Quiz Code\"\n                    autoFocus\n                    onKeyPress={(event) => {\n                        if (event.key === 'Enter') handleJoinQuiz();\n                    }}\n                />\n                <button className=\"join-button\" onClick={handleJoinQuiz}>\n                    Join Quiz\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default JoinQuiz;\n","import { IconButton } from '@material-ui/core';\nimport { DeleteOutline, EditRounded } from '@material-ui/icons';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './QuizCard.css';\n\nconst CreatedQuizCard = ({ title, responses, code, questions, isOpen, index, setEditQuiz, setDeleteQuiz }) => {\n    return (\n        <div className=\"quiz-card\">\n            <div>\n                <h1 className=\"created-quiz-title\">{title}</h1>\n                <p className=\"card-code\">Code : {code}</p>\n            </div>\n            <div id=\"horizontal-line\"></div>\n            <div id=\"row\">\n                <div id=\"responses\">\n                    {responses !== undefined ? (\n                        <Link to={`/responses/${code}`} style={{ fontWeight: 'bold' }} className=\"respo\">\n                            Responses : {responses}\n                        </Link>\n                    ) : (\n                        <></>\n                    )}\n                </div>\n                <div id=\"questions\">Question : {questions}</div>\n            </div>\n            {responses !== undefined ? (\n                <div className=\"bottom-bar\">\n                    {isOpen ? <div id=\"open\">open</div> : <div id=\"closed\">closed</div>}\n                    <div>\n                        <IconButton onClick={() => setEditQuiz([index])} color=\"secondary\">\n                            <EditRounded color=\"secondary\" />\n                        </IconButton>\n                        <IconButton color=\"secondary\" onClick={() => setDeleteQuiz([index])}>\n                            <DeleteOutline color=\"secondary\" />\n                        </IconButton>\n                    </div>\n                </div>\n            ) : (\n                <></>\n            )}\n        </div>\n    );\n};\n\nexport default CreatedQuizCard;\n","import React from 'react';\nimport './QuizCard.css';\n\nconst JoinedQuizCard = ({ title, score, questions }) => {\n    return (\n        <div className=\"quiz-card\">\n            <h1 id=\"created-quiz-title\">{title}</h1>\n            <div id=\"horizontal-line\"></div>\n            <div id=\"row\">\n                <p id=\"responses\">\n                    Score : {score}/{questions}\n                </p>\n                <p id=\"result\">{score / questions > 0.6 ? 'Passed' : 'Fail'}</p>\n                <p id=\"questions\">Questions : {questions}</p>\n            </div>\n            <div id=\"open\"></div>\n        </div>\n    );\n};\n\nexport default JoinedQuizCard;\n","import React, { useState, useEffect } from 'react';\nimport './UserDashBoard.css';\nimport CreatedQuizCard from '../components/CreatedQuizCard';\nimport JoinedQuizCard from '../components/JoinedQuizCard';\nimport LoadingScreen from './LoadingScreen';\nimport CreateQuiz from './CreateQuiz';\n\nconst UserDashboard = ({ user }) => {\n    const [createdQuizzes, setCreatedQuizzes] = useState([]);\n    const [allQuizzes, setAllQuizzes] = useState([]);\n    const [attemptedQuizzes, setAttemptedQuizzes] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [editQuiz, setEditQuiz] = useState([]);\n    const [DeleteQuiz, setDeleteQuiz] = useState([]);\n    // Fetch Data from the API\n\n    useEffect(() => {\n        if (!user.uid) {\n            setLoading(false);\n            return;\n        }\n        const fetchAllQuizzes = async () => {\n            const result = await fetch('/API/quizzes/all');\n            const quizData = await result.json();\n            console.log(quizData);\n            setAllQuizzes(quizData);\n        };\n        const fetchQuizData = async () => {\n            const results = await fetch(`/API/users/${user.uid}`);\n            const quizData = await results.json();\n            if (quizData.createdQuiz) setCreatedQuizzes(quizData.createdQuiz);\n            if (quizData.attemptedQuiz) setAttemptedQuizzes(quizData.attemptedQuiz);\n            setLoading(false);\n        };\n        fetchAllQuizzes();\n        console.log(allQuizzes);\n        if (user) fetchQuizData();\n    }, [user, setAllQuizzes]);\n\n    const editQuizHandle = async (title, questions, isOpen) => {\n        if (!title) setEditQuiz([]);\n        else {\n            setLoading(true);\n            console.dir({\n                quizId: createdQuizzes[editQuiz]._id,\n                uid: user.uid,\n                title,\n                questions,\n                isOpen,\n            });\n            const results = await fetch('/API/quizzes/edit', {\n                method: 'POST',\n                body: JSON.stringify({\n                    quizId: createdQuizzes[editQuiz]._id,\n                    uid: user.uid,\n                    title,\n                    questions,\n                    isOpen,\n                }),\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n            const submitData = await results.json();\n            console.dir(submitData);\n            const temp = [...createdQuizzes];\n            temp[editQuiz[0]].title = title;\n            temp[editQuiz[0]].questions = questions;\n            temp[editQuiz[0]].isOpen = isOpen;\n            setCreatedQuizzes(temp);\n            setEditQuiz([]);\n            setLoading(false);\n        }\n    };\n\n    if (loading) return <LoadingScreen />;\n    const deleteQuizHandle = async () => {\n        setLoading(true);\n        const result = await fetch('/API/quizzes/delete', {\n            method: 'DELETE',\n            body: JSON.stringify({\n                quizId: createdQuizzes[DeleteQuiz]._id,\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n        const submitData = await result.json();\n        console.log(submitData);\n        const temp = [...createdQuizzes];\n        delete temp[DeleteQuiz];\n\n        setCreatedQuizzes(temp);\n        setDeleteQuiz([]);\n        setLoading(false);\n    };\n    if (DeleteQuiz.length) {\n        deleteQuizHandle();\n    }\n\n    if (editQuiz.length)\n        return (\n            <CreateQuiz\n                user={user}\n                quizTitle={createdQuizzes[editQuiz].title}\n                questions={createdQuizzes[editQuiz].questions}\n                isOpen={createdQuizzes[editQuiz].isOpen}\n                editQuizHandle={editQuizHandle}\n            />\n        );\n    return (\n        <div className=\"dash-body\">\n            <div className=\"quizzes\">\n                <div className=\"heading\">\n                    <div className=\"line-left\" />\n                    {user.role === 'teacher' ? <h2>Created </h2> : <h2>Quizzes</h2>}\n\n                    <div className=\"line\" />\n                </div>\n                <div className=\"card-holder\">\n                    {user.role === 'teacher'\n                        ? createdQuizzes.map((quiz, key) => (\n                              <CreatedQuizCard\n                                  key={key}\n                                  index={key}\n                                  setEditQuiz={setEditQuiz}\n                                  title={quiz.title}\n                                  code={quiz._id}\n                                  responses={quiz.responses}\n                                  questions={quiz.questions.length}\n                                  isOpen={quiz.isOpen}\n                                  setDeleteQuiz={setDeleteQuiz}\n                              />\n                          ))\n                        : allQuizzes.map((quiz, key) => {\n                              return <CreatedQuizCard key={key} index={key} title={quiz.title} code={quiz._id} questions={quiz.questions.length} />;\n                          })}\n                </div>\n            </div>\n            <div className=\"quizzes\">\n                <div className=\"heading\">\n                    <div className=\"line-left\" />\n                    <h2>Attempted </h2>\n                    <div className=\"line\" />\n                </div>\n                <div className=\"card-holder\">\n                    {attemptedQuizzes.map((quiz, key) => (\n                        <JoinedQuizCard key={key} title={quiz.title} score={quiz.responses[0].score} questions={quiz.totalQuestions} />\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default UserDashboard;\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport './CreatedSuccesfully.css'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nconst CreatedSuccesfully = ({ match }) => {\n\tconst [Copy, setCopy] = useState('copy')\n\treturn (\n\t\t<div id='created-quiz'>\n\t\t\t<div id='created-quiz-div'>\n\t\t\t\t<div id='message'>\n\t\t\t\t\t<h2 className='b'>Quiz Created Successfully!</h2>\n\t\t\t\t\t<p>Share the follwong code with your students</p>\n\t\t\t\t</div>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\t// className='input-text'\n\t\t\t\t\tid={Copy}\n\t\t\t\t\tvalue={match.params.quizCode}\n\t\t\t\t\tdisabled={true}\n\t\t\t\t\t// onChange={(e) => {}}\n\t\t\t\t/>\n\t\t\t\t<CopyToClipboard\n\t\t\t\t\ttext={match.params.quizCode}\n\t\t\t\t\tonCopy={() => {\n\t\t\t\t\t\tsetCopy('copied')\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<button className='button wd-200'>\n\t\t\t\t\t\t{Copy === 'copy' ? 'Copy Code' : 'Code Copied!'}\n\t\t\t\t\t</button>\n\t\t\t\t</CopyToClipboard>\n\t\t\t\t<Link to={'/dashboard'}>\n\t\t\t\t\t<button className='button wd-200'>Dashboard</button>\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\nexport default CreatedSuccesfully\n","import { Link } from 'react-router-dom';\nimport React from 'react';\n\nconst NotFoundPage = () => {\n    return (\n        <div className=\"loading\">\n            <h1>404 Page Not Found!</h1>\n            <div id=\"logo-name\">\n                <b>Quizzy</b>Learning\n            </div>\n            <h3>\n                Who told you to mess up with the URL? <Link to=\"/\">Click here</Link> and Go back to the Dashboard.\n            </h3>\n        </div>\n    );\n};\n\nexport default NotFoundPage;\n","import React, { useState, useEffect } from \"react\"\nimport { Modal } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Link } from \"react-router-dom\"\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\t// margin: \"10px\",\n\t},\n\tmodal: {\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t\ttextAlign: \"center\",\n\t},\n\tpaper: {\n\t\tbackgroundColor: theme.palette.background.paper,\n\t\tboxShadow: theme.shadows[5],\n\t\tpadding: theme.spacing(10, 10),\n\t\tborderRadius: \"20px\",\n\t\t// display:\"flex\",\n\t\t// alignItems:\"center\",\n\t},\n\tbuttons: {\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"flex-end\",\n\t},\n}))\n\nconst AttemptedModal = ({ result, totalScore, showModal }) => {\n\tconst classes = useStyles()\n\tconst [open, setOpen] = useState(showModal)\n\n\tuseEffect(() => {\n\t\tsetOpen(showModal)\n\t}, [showModal])\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Modal\n\t\t\t\taria-labelledby=\"transition-modal-title\"\n\t\t\t\taria-describedby=\"transition-modal-description\"\n\t\t\t\tclassName={classes.modal}\n\t\t\t\topen={open}\n\t\t\t\tdisableEnforceFocus={true}\n\t\t\t>\n\t\t\t\t<div className={classes.paper}>\n\t\t\t\t\t<h2>Quiz Attempted Successfully.</h2>\n\t\t\t\t\t<h1 className=\"score_h2\">\n\t\t\t\t\t\t{result.error\n\t\t\t\t\t\t\t? \"Not Submitted ! \"\n\t\t\t\t\t\t\t: `Score: ${result.score}/${totalScore}`}\n\t\t\t\t\t</h1>\n\t\t\t\t\t<Link to={\"/dashboard\"}>\n\t\t\t\t\t\t<button className=\"button wd-200\">Dashboard</button>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t</div>\n\t)\n}\n\nexport default AttemptedModal\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport firebase from '../firebase/firebase';\nimport LoadingScreen from './LoadingScreen';\nimport AttemptedModal from './AttemptedModal';\n\nconst AttemptQuiz = ({ match }) => {\n    const quizCode = match.params.quizCode;\n    const [passed, setPassed] = useState(false);\n    const [marks, setMarks] = useState(0);\n    const [questions, setQuestions] = useState([]);\n    const [attemptedQuestions, setAttemptedQuestions] = useState([]);\n    const [quizTitle, setQuizTitle] = useState('');\n    const [loading, setLoading] = useState(true);\n    const [result, setResult] = useState({});\n    const [showModal, setShowModal] = useState(false);\n    const uid = firebase.auth().currentUser.uid;\n    useEffect(() => {\n        const fetchQuiz = async () => {\n            const res = await fetch('/API/quizzes/join', {\n                method: 'POST',\n                body: JSON.stringify({ quizId: quizCode, uid }),\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n            const quizData = await res.json();\n            setLoading(false);\n            if (quizData.error) setQuizTitle(quizData.error);\n            else {\n                setQuizTitle(quizData.title);\n                setQuestions(quizData.questions);\n                const temp = quizData.questions.map((question) => {\n                    console.log(question);\n                    return {\n                        id: question.id,\n                        title: question.title,\n                        optionType: question.optionType,\n                        selectedOptions: [],\n                        optionsLength: question.options.length,\n                    };\n                });\n                setAttemptedQuestions(temp);\n            }\n        };\n        fetchQuiz();\n    }, [quizCode, uid]);\n\n    const handleOptionSelect = (e, option, index) => {\n        const temp = [...attemptedQuestions];\n        const options = temp[index].selectedOptions;\n\n        console.log('index:' + index);\n        if (!options.includes(option) && e.target.checked) {\n            if (attemptedQuestions[index].optionType === 'radio') options[0] = option;\n            else options.push(option);\n        }\n        if (options.includes(option) && !e.target.checked) {\n            const i = options.indexOf(option);\n            options.splice(i, 1);\n        }\n        temp[index].selectedOptions = options;\n\n        setAttemptedQuestions(temp);\n    };\n    const submitQues = async () => {\n        const att = attemptedQuestions.filter((e) => {\n            if (e.selectedOptions.length > 0) return true;\n\n            return false;\n        });\n        console.log(attemptedQuestions);\n        try {\n            const res = await fetch('/API/quizzes/ques', {\n                method: 'POST',\n                body: JSON.stringify({\n                    uid,\n                    quizId: quizCode,\n                    questions: att,\n                }),\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n            const body = await res.json();\n            console.log(body);\n            setMarks(body.score);\n\n            // console.log(att.length + ' this');\n            for (let i = 0; i < att.length; i++) {\n                for (let j = 0; j < att[i].optionsLength; j++) {\n                    // console.log(`${i}${j}`);\n                    try {\n                        document.getElementById(`${i}${j}`).disabled = true;\n                    } catch (e) {}\n                }\n            }\n            const pass = body.score / attemptedQuestions.length;\n            console.log(pass + ' you got passed');\n            if (pass > 0.6 && !passed) {\n                alert('Congratulations you passed the quiz. you can now submit');\n                setPassed(true);\n            }\n        } catch (e) {\n            console.log('Error Submitting quiz', e);\n        }\n    };\n    const submitQuiz = async () => {\n        // send attemped Questions to backend\n        try {\n            const res = await fetch('/API/quizzes/submit', {\n                method: 'POST',\n                body: JSON.stringify({\n                    uid,\n                    quizId: quizCode,\n                    questions: attemptedQuestions,\n                }),\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n            const body = await res.json();\n            setResult(body);\n            setShowModal(true);\n            console.log('res body : ', body);\n        } catch (e) {\n            console.log('Error Submitting quiz', e);\n        }\n    };\n\n    if (loading) return <LoadingScreen />;\n    // For Quiz not Found\n    if (quizTitle === 'ERR:QUIZ_NOT_FOUND')\n        return (\n            <div className=\"loading\">\n                <h1>404 Quiz Not Found!</h1>\n                <div id=\"logo-name\">\n                    <b>Quizzy</b>Learning\n                </div>\n                <h3>\n                    Go back to <Link to=\"/join-quiz\">Join Quiz </Link>Page.\n                </h3>\n            </div>\n        );\n    // For Quiz not accessible\n    else if (quizTitle === 'ERR:QUIZ_ACCESS_DENIED')\n        return (\n            <div className=\"loading\">\n                <h2>Quiz Access is Not Granted by the Creator. Please contact Quiz Creator.</h2>\n                <div id=\"logo-name\">\n                    <b>Quizzy</b>Learning\n                </div>\n                <h3>\n                    Go back to <Link to=\"/join-quiz\">Join Quiz </Link>Page.\n                </h3>\n            </div>\n        );\n    else if (quizTitle === 'ERR:QUIZ_ALREADY_ATTEMPTED')\n        return (\n            <div className=\"loading\">\n                <h2>You have already taken the Quiz.</h2>\n                <div id=\"logo-name\">\n                    <b>Quizzy</b>Learning\n                </div>\n                <h3>\n                    Go back to <Link to=\"/join-quiz\">Join Quiz </Link>Page.\n                </h3>\n            </div>\n        );\n    else\n        return (\n            <div id=\"main-body\">\n                <div id=\"create-quiz-body\">\n                    <div className=\"quiz-header\">\n                        <div></div>\n                        <h2>{quizTitle}</h2>\n                        <div id=\"marksQuiz\">\n                            Marks: {marks}/{attemptedQuestions.length}\n                        </div>\n                    </div>\n                    {questions.map((question, index) => (\n                        <div className=\"attempQuestionCard\" key={index}>\n                            <div id=\"title\">{question.title}</div>\n                            <div className=\"option-div\">\n                                {question.options.map((option, ind) => (\n                                    <div className=\"option\" key={ind}>\n                                        {question.optionType === 'radio' ? (\n                                            <input id={`${index}${ind}`} type=\"radio\" name={`option${index}`} onChange={(e) => handleOptionSelect(e, option.text, index)} />\n                                        ) : (\n                                            <input id={`${index}${ind}`} type=\"checkbox\" name=\"option\" onChange={(e) => handleOptionSelect(e, option.text, index)} />\n                                        )}\n                                        <label className=\"label\" style={{ padding: '0px 5px' }}>\n                                            {option.text}\n                                        </label>\n                                    </div>\n                                ))}\n                            </div>\n                            <div className=\"submit\">\n                                <button className=\"add-bn\" onClick={submitQues}>\n                                    Mark\n                                </button>\n                            </div>\n                        </div>\n                    ))}\n                    <button className=\"button wd-200\" onClick={submitQuiz}>\n                        Submit\n                    </button>\n                    <AttemptedModal result={result} showModal={showModal} totalScore={questions.length} />\n                </div>\n            </div>\n        );\n};\n\nexport default AttemptQuiz;\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport './Sidebar.css';\nimport firebase from '../firebase/firebase';\nimport { Icon } from '@material-ui/core';\nimport { CreateNewFolder, Dashboard, ExitToApp, MeetingRoom, MenuOpenRounded, MenuRounded } from '@material-ui/icons';\n\nfunction Sidebar({ user }) {\n    const [signOut, setSignOut] = useState(false);\n    const SidedbarData = [\n        {\n            title: 'Dashboard',\n            path: '/dashboard',\n            icon: <Dashboard />,\n            CName: 'nav-text',\n        },\n        {\n            title: 'Join Quiz',\n            path: '/join-quiz',\n            icon: <MeetingRoom />,\n            CName: 'nav-text',\n        },\n\n        {\n            title: 'Create Quiz',\n            path: '/create-quiz',\n            icon: <CreateNewFolder />,\n            CName: 'nav-text',\n        },\n    ];\n    if (user.role !== 'teacher') {\n        delete SidedbarData[2];\n    }\n    const [sidebar, setSidebar] = useState(false);\n    const showSidebar = () => setSidebar(!sidebar);\n    if (signOut) return <Redirect to=\"/\" />;\n\n    return (\n        <div>\n            <Icon className=\"menu-bars\" onClick={showSidebar}>\n                <MenuRounded />\n            </Icon>\n            {/* <FaIcons.FaBars  onClick={} /> */}\n            <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\n                <ul className=\"nav-menu-items\" onClick={showSidebar}>\n                    <li className=\"navbar-toggle\">\n                        <Icon>\n                            <MenuOpenRounded fontSize=\"large\" />\n                        </Icon>\n                    </li>\n                    {SidedbarData.map((item, index) => {\n                        return (\n                            <li key={index} className=\"nav-text\">\n                                <Link to={item.path}>\n                                    <Icon>{item.icon}</Icon>\n                                    <span className=\"nav-item-title\">{item.title}</span>\n                                </Link>\n                            </li>\n                        );\n                    })}\n                    {/* Sign Out Button */}\n                    <li className=\"nav-text sign-out\">\n                        <button\n                            onClick={() => {\n                                console.log('clicked');\n                                // setUser({})\n                                firebase.auth().signOut();\n                                setSignOut(true);\n                            }}\n                        >\n                            <Icon>\n                                <ExitToApp />\n                            </Icon>\n                            <span className=\"nav-item-title\">{'SignOut'}</span>\n                        </button>\n                    </li>\n                </ul>\n            </nav>\n        </div>\n    );\n}\n\nexport default Sidebar;\n","import React from 'react';\nimport Sidebar from './Sidebar';\nimport './Appbar.css';\nimport { Link } from 'react-router-dom';\nimport { Icon } from '@material-ui/core';\nimport { AccountCircle } from '@material-ui/icons';\nimport { Col, Container, Navbar } from 'react-bootstrap';\nconst Appbar = ({ user, setUser }) => {\n    return (\n        <Navbar fixed=\"top\">\n            <Container className=\"appbar\">\n                <Col className=\"slider\">\n                    <Sidebar user={user} />\n                    <Link to=\"/\" className=\"home\">\n                        <b>Quizzy</b>Learning\n                    </Link>\n                </Col>\n                <Col className=\"appbar-user\">\n                    <Icon className=\"icon\">\n                        <AccountCircle />\n                    </Icon>\n                    <p>\n                        <b>{user.name}</b>\n                    </p>\n                </Col>\n            </Container>\n        </Navbar>\n    );\n};\n\nexport default Appbar;\n","import React from 'react'\nimport { withStyles, makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\n\nconst StyledTableCell = withStyles((theme) => ({\n\thead: {\n\t\tbackgroundColor: '#d81e5b',\n\t\tcolor: theme.palette.common.white,\n\t},\n\tbody: {\n\t\tfontSize: 14,\n\t},\n}))(TableCell)\n\nconst StyledTableRow = withStyles((theme) => ({\n\troot: {\n\t\t'&:nth-of-type(odd)': {\n\t\t\tbackgroundColor: theme.palette.action.hover,\n\t\t},\n\t},\n}))(TableRow)\n\nfunction createData({ name, email, score }) {\n\treturn { name, email, score }\n}\n\nconst useStyles = makeStyles({\n\ttable: {\n\t\tminWidth: 500,\n\t},\n\tpaper: {\n\t\tborderRadius: 15,\n\t},\n})\n\nexport default function ResponsesTable({ responses }) {\n\tconst classes = useStyles()\n\tconst rows = responses.map((resp) => createData(resp))\n\treturn (\n\t\t<TableContainer className={classes.paper} component={Paper}>\n\t\t\t<Table className={classes.table} aria-label='customized table'>\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<StyledTableCell>Name</StyledTableCell>\n\t\t\t\t\t\t<StyledTableCell align='center'>Email Address</StyledTableCell>\n\t\t\t\t\t\t<StyledTableCell align='right'>Score</StyledTableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{rows.map((row) => (\n\t\t\t\t\t\t<StyledTableRow key={row.name}>\n\t\t\t\t\t\t\t<StyledTableCell component='th' scope='row'>\n\t\t\t\t\t\t\t\t{row.name}\n\t\t\t\t\t\t\t</StyledTableCell>\n\t\t\t\t\t\t\t<StyledTableCell align='center'>{row.email}</StyledTableCell>\n\t\t\t\t\t\t\t<StyledTableCell align='right'>{row.score}</StyledTableCell>\n\t\t\t\t\t\t</StyledTableRow>\n\t\t\t\t\t))}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</TableContainer>\n\t)\n}\n","import React, { useEffect, useState } from 'react'\nimport LoadingScreen from './LoadingScreen'\nimport firebase from '../firebase/firebase'\nimport ResponsesTable from '../components/ResponsesTable'\n\nconst Responses = ({ match }) => {\n\tconst quizId = match.params.quizCode\n\tconst uid = firebase.auth().currentUser.uid\n\tconst [loading, setLoading] = useState(true)\n\tconst [responses, setResponses] = useState([])\n\n\tuseEffect(() => {\n\t\tconst getResponses = async () => {\n\t\t\tconst res = await fetch('/API/quizzes/responses', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify({ quizCode: quizId, uid }),\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t})\n\t\t\tconst result = await res.json()\n\t\t\tconsole.log(result)\n\t\t\tsetResponses(result.finalResponse)\n\t\t\tsetLoading(false)\n\t\t}\n\t\tgetResponses()\n\t}, [quizId, uid])\n\tconsole.log(responses)\n\tif (loading) return <LoadingScreen />\n\telse\n\t\treturn (\n\t\t\t<div className='margin-top'>\n\t\t\t\t<h2>Responses</h2>\n\t\t\t\t<ResponsesTable responses={responses} />\n\t\t\t</div>\n\t\t)\n}\n\nexport default Responses\n","import { Switch, Route } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport firebase from './firebase/firebase';\n\n// Stylesheet\nimport './App.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n// Components\nimport Home from './screens/Home';\nimport OneTimeDashBoard from './screens/OneTimeDashboard';\nimport CreateQuiz from './screens/CreateQuiz';\nimport JoinQuiz from './screens/JoinQuiz';\nimport UserDashboard from './screens/UserDashboard';\nimport CreatedSuccesfully from './screens/CreatedSuccesfully';\nimport NotFoundPage from './screens/NotFoundPage';\nimport AttemptQuiz from './screens/AttemptQuiz';\nimport Appbar from './components/Appbar';\nimport Responses from './screens/Responses';\n\nconst App = () => {\n    const [user, setUser] = useState({});\n\n    useEffect(() => {\n        const createUserInDB = async () => {\n            if (user.uid)\n                if (firebase.auth().currentUser.metadata.lastSignInTime === firebase.auth().currentUser.metadata.creationTime) {\n                    try {\n                        await fetch('/API/users/create', {\n                            method: 'POST',\n                            body: JSON.stringify({\n                                uid: user.uid,\n                                name: user.name,\n                                email: user.email,\n                                role: user.role,\n                            }),\n                            headers: {\n                                'Content-Type': 'application/json',\n                            },\n                        });\n\n                        console.log('posted');\n                    } catch (error) {\n                        console.log('User Creation Error: ', error);\n                    }\n                }\n        };\n        createUserInDB();\n    }, [user]);\n\n    return (\n        <div className=\"App\">\n            {!firebase.auth().currentUser ? (\n                <Home setUser={setUser} />\n            ) : (\n                <>\n                    <div>\n                        <Appbar user={user} setUser={setUser} />\n                    </div>\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <OneTimeDashBoard user={user} />\n                        </Route>\n                        <Route path=\"/dashboard\">\n                            <UserDashboard user={user} />\n                        </Route>\n                        <Route path=\"/create-quiz\">\n                            <CreateQuiz user={user} />\n                        </Route>\n                        <Route path=\"/created-succesfully/:quizCode\" component={CreatedSuccesfully} />\n                        <Route path=\"/join-quiz\">\n                            <JoinQuiz user={user} />\n                        </Route>\n                        <Route path=\"/attempt-quiz/:quizCode\" component={AttemptQuiz} />\n                        <Route path=\"/responses/:quizCode\" component={Responses} />\n                        <Route component={NotFoundPage} />\n                    </Switch>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}